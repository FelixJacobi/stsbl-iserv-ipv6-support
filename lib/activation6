#!/usr/bin/perl -T -CSDAL
use warnings;
use strict;
use File::Slurp::Unicode;
use IPC::Run qw(run);
use IServ::Conf;
use IServ::DB;
use NetAddr::MAC;
undef %ENV;

$ENV{PATH} = '/usr/sbin:/usr/bin:/sbin:/bin';

system "ipset -exist create mac6 hash:mac";
system "ipset -exist create proxy6 hash:mac";

exit 0 if !$conf->{Activation};

IServ::DB::Do "DELETE FROM nacs WHERE timer IS NOT NULL AND timer <= now()";
IServ::DB::Do "UPDATE hosts SET override_route = NULL, override_until = NULL, ".
  "override_by = NULL WHERE override_until <= now()";
IServ::DB::Do "UPDATE hosts SET deploy_until = NULL ".
  "WHERE deploy_until <= now()";

my %active = IServ::DB::SelectAll_Hash "
  -- add whitelisted hosts
  SELECT mac, proxyenforce FROM hosts
    WHERE
      -- whitelisted in computer management
      internet
      -- whitelisted in the computer module
      OR override_route
      -- whitelisted by deploy
      OR deploy_until IS NOT NULL
  -- add users with inet_access privilege
  UNION SELECT mac, proxyenforce FROM samba_user_last
    JOIN users_priv USING (act)
    LEFT OUTER JOIN hosts USING (ip)
    WHERE privilege LIKE 'inet_access'
  -- add users with NACs
  UNION SELECT mac, proxyenforce FROM nacs
    LEFT OUTER JOIN hosts USING (ip)
    WHERE ip IS NOT NULL
    AND timer IS NOT NULL
  -- remove hosts that have been blacklisted in the computer module
  EXCEPT SELECT mac, proxyenforce FROM hosts WHERE NOT override_route
  -- remove users with inet_block privilege
  EXCEPT SELECT mac, proxyenforce FROM samba_user_last
    JOIN users_priv USING (act)
    LEFT OUTER JOIN hosts USING (ip)
    WHERE privilege LIKE 'inet_block'
  ORDER BY 1
  ";

# update iptables
# only hosts with proxyenforce='f' will be whitelisted in NAT
my %rules = map {("ipset add mac6 $_", 1)}
    grep { !$active{$_}{'proxyenforce'} } keys %active;

my %proxy_only = map {("ipset add proxy6 $_", 1)}
    grep { $active{$_}{'proxyenforce'} } keys %active;

if (%rules)
{
  my $upd = join "", map "$_\n", keys %rules;
  printf "updating mac ipsets\n";
  system "ipset -exist create newmac6 hash:mac";
  system "ipset swap mac6 newmac6";
  system "ipset flush newmac6";
  system $upd;
} 
else
{
  system "ipset flush mac6";
}

if (%proxy_only)
{
  my $upd = join "", map "$_\n", keys %proxy_only;
  printf "updating mac proxyonly ipsets\n";
  system "ipset -exist create newproxy6 hash:mac";
  system "ipset swap proxy6 newproxy6";
  system "ipset flush newproxy6";
  system $upd;
}
else
{
  system "ipset flush proxy6";
}

